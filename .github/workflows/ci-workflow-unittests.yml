name: unit-tests
on:
  push:
    branches:
      - "master"
      - "test-me/*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 7 * * 1" # Run every Monday at 7:00 UTC
jobs:
  unit-test:
    name: Unittesting on ${{ matrix.os }} with python latest
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [macos, ubuntu, windows]
        include:
          - os: macos
            os-short: osx
          - os: ubuntu
            os-short: linux
          - os: windows
            os-short: win
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniconda-version: "latest"
          activate-environment: py3_parcels
          environment-file: environment_py3_${{ matrix.os-short }}.yml
          auto-activate-base: false
          auto-update-conda: true
      - run: conda info
      - name: Install parcels
        run: python setup.py install
      - name: Set env variables for macos
        run: |
          if [[ "${{ matrix.os }}" == "macos" ]]; then
            echo "Setting CONDA_BUILD_SYSROOT and C_INCLUDE_PATH for macos"
            echo "CONDA_BUILD_SYSROOT=/" >> $GITHUB_ENV
            echo "C_INCLUDE_PATH=$C_INCLUDE_PATH:/Applications/Xcode.app/Contents//Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/" >> $GITHUB_ENV
            echo "CC=gcc" >> $GITHUB_ENV
          else
            echo "Platform not macos."
          fi
      - name: Unit test
        run: |
          pytest -v -s --html=${{ matrix.os }}_unit_test_report.html --self-contained-html tests
      - name: Upload test results
        if: ${{ always() }} # Always run this step, even if tests fail
        uses: actions/upload-artifact@v2
        with:
          name: Unittest report
          path: ${{ matrix.os }}_unit_test_report.html
